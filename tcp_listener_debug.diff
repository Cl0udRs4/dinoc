--- a/src/protocols/tcp_listener.c
+++ b/src/protocols/tcp_listener.c
@@ -156,6 +156,8 @@ status_t tcp_listener_create(const protocol_listener_config_t* config, protocol_
 static status_t tcp_listener_start(protocol_listener_t* listener) {
     if (listener == NULL || listener->protocol_context == NULL) {
         return STATUS_ERROR_INVALID_PARAM;
+        fprintf(stderr, "TCP listener start failed: invalid parameter\n");
+        fflush(stderr);
     }
     
     tcp_listener_context_t* context = (tcp_listener_context_t*)listener->protocol_context;
@@ -163,12 +165,16 @@ static status_t tcp_listener_start(protocol_listener_t* listener) {
     // Check if already running
     if (context->running) {
         return STATUS_ERROR_ALREADY_RUNNING;
+        fprintf(stderr, "TCP listener start failed: already running\n");
+        fflush(stderr);
     }
     
     // Create server socket
     context->server_socket = socket(AF_INET, SOCK_STREAM, 0);
     if (context->server_socket < 0) {
         return STATUS_ERROR_SOCKET;
+        fprintf(stderr, "TCP listener start failed: socket creation error\n");
+        fflush(stderr);
     }
     
     // Set socket options
@@ -177,6 +183,8 @@ static status_t tcp_listener_start(protocol_listener_t* listener) {
         close(context->server_socket);
         context->server_socket = -1;
         return STATUS_ERROR_SOCKET;
+        fprintf(stderr, "TCP listener start failed: setsockopt error\n");
+        fflush(stderr);
     }
     
     // Bind socket
@@ -190,6 +198,8 @@ static status_t tcp_listener_start(protocol_listener_t* listener) {
         close(context->server_socket);
         context->server_socket = -1;
         return STATUS_ERROR_BIND;
+        fprintf(stderr, "TCP listener start failed: bind error for %s:%d\n", context->bind_address, context->port);
+        fflush(stderr);
     }
     
     // Listen for connections
@@ -197,6 +207,8 @@ static status_t tcp_listener_start(protocol_listener_t* listener) {
         close(context->server_socket);
         context->server_socket = -1;
         return STATUS_ERROR_LISTEN;
+        fprintf(stderr, "TCP listener start failed: listen error\n");
+        fflush(stderr);
     }
     
     // Set running flag
@@ -208,8 +220,11 @@ static status_t tcp_listener_start(protocol_listener_t* listener) {
         context->server_socket = -1;
         context->running = false;
         return STATUS_ERROR_THREAD;
+        fprintf(stderr, "TCP listener start failed: thread creation error\n");
+        fflush(stderr);
     }
     
+    fprintf(stderr, "TCP listener started successfully on %s:%d\n", context->bind_address, context->port);
     return STATUS_SUCCESS;
 }
